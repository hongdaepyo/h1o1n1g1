<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- controller -->
	<bean class="controller.HcmcController" >
		<property name="service" ref="svc"/>
	</bean>
	
	<!-- [1] DataSource빈 선언 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/mypageMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" index="0" />
	</bean>

	<!-- Spring JDBC나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactioManager 
		트랜잭션 관리자로 사용된다. -->
	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션:<tx:advice>태그를 이용한 트랜잭션 처리 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- [6] 트랜잭션으로 처리할 메소드에 transactionManager설정 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* Service.MyPage*.*(..))"/>
	</aop:config>

	<!-- [7] MemDaoImp 빈 선언 -->
	<bean id="dao" class="dao.MyPageDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<!-- [7] ServiceImp 빈 선언 -->
	<bean id="svc" class="service.MyPageServiceImp">
		<property name="dao" ref="dao" />
	</bean>
	
	<!-- tiles -->
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
			  <value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- view -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<property name="order" value="1"/>
	
	</bean>
	
	<!-- detail.jsp 처리하는 부분, internalresurceviewresolver 는 항상 우선순위(order)는 가장 낮게 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  <property name="prefix" value="/WEB-INF/view/"/>
	  <property name="suffix" value=".jsp"/>
	  <property name="order" value="2"/>
	</bean>
</beans>
